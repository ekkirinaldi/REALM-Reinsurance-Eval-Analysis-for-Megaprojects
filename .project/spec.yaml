specVersion: v2
specMinorVersion: 2
meta:
  name: REALM-Reinsurance-Eval-Analysis-for-Megaprojects
  image: project-realm-reinsurance-eval-analysis-for-megaprojects
  description: 'REALM: AI-powered risk analysis for mega-projects'
  labels: []
  createdOn: "2024-09-02T16:30:18Z"
  defaultBranch: main
layout:
- path: code/
  type: code
  storage: git
- path: models/
  type: models
  storage: gitlfs
- path: data/
  type: data
  storage: gitlfs
- path: data/scratch/
  type: data
  storage: gitignore
environment:
  base:
    registry: nvcr.io
    image: nvidia/ai-workbench/python-cuda117:1.0.3
    build_timestamp: "20231214221644"
    name: Python with CUDA 11.7
    supported_architectures: []
    cuda_version: "11.7"
    description: A Python Base with CUDA 11.7
    entrypoint_script: ""
    labels:
    - cuda11.7
    apps:
    - name: REALM
      type: python
      class: webapp
      start_command: streamlit run app.py
      health_check_command: curl -f http://localhost:8501/health
      stop_command: echo "Stopping python app"
      user_msg: Running Streamlit app for REALM
      logfile_path: ""
      timeout_seconds: 60
      icon_url: ""
      webapp_options:
        autolaunch: true
        port: "8501"
        proxy:
          trim_prefix: false
        url_command: echo "http://localhost:8501"
    programming_languages:
    - python3
    icon_url: ""
    image_version: 1.0.3
    os: linux
    os_distro: ubuntu
    os_distro_release: "22.04"
    schema_version: v2
    user_info:
      uid: ""
      gid: ""
      username: ""
    package_managers:
    - name: apt
      binary_path: /usr/bin/apt
      installed_packages:
      - curl
      - git
      - git-lfs
      - python3
      - gcc
      - python3-dev
      - python3-pip
      - vim
      - python3.10-venv
    - name: pip
      binary_path: /usr/local/bin/pip
      installed_packages: []
    package_manager_environment:
      name: ""
      target: ""
execution:
  apps:
  - name: REALM
    type: python
    class: webapp
    start_command: streamlit run app.py
    health_check_command: curl -f http://localhost:8501/health
    stop_command: pkill -f app.py
    user_msg: ""
    logfile_path: ""
    timeout_seconds: 60
    icon_url: ""
    webapp_options:
      autolaunch: true
      port: "5801"
      proxy:
        trim_prefix: false
      url: /
  resources:
    gpu:
      requested: 1
    sharedMemoryMB: 4000
  secrets: []
  mounts:
  - type: project
    target: /project/
    description: ""
    options: rw
